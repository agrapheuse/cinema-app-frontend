{
  "extends": [
    "next/core-web-vitals",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier"
  ],
  "plugins": ["prettier", "@typescript-eslint", "react-hooks"],
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ],

    // Strict ESLint rules
    "no-unused-vars": "off", // No unused variables
    "no-console": "warn", // Avoid using console logs in production
    "no-debugger": "error", // No debugger statements
    "eqeqeq": ["error", "always"], // Enforce strict equality
    "curly": "error", // Enforce consistent use of curly braces
    "no-var": "error", // Always use let/const
    "prefer-const": "error", // Prefer const where possible
    "no-restricted-syntax": ["error", "WithStatement"], // Disallow 'with' statements
    "consistent-return": "error", // Require consistent return statements

    // TypeScript-specific rules
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_", // Allow unused variables that start with "_"
        "ignoreRestSiblings": true,
        "caughtErrorsIgnorePattern": "^_", // Allow unused caught errors that start with "_"
        "args": "none" // Optionally, you can set this to "after-used" to allow unused args only if other args are used
      }
    ], // Ignore unused args starting with "_"
    "@typescript-eslint/explicit-function-return-type": "error", // Enforce return types on functions
    "@typescript-eslint/consistent-type-imports": "error", // Enforce consistent use of type imports
    "@typescript-eslint/no-explicit-any": "error", // Disallow the use of 'any'
    "@typescript-eslint/ban-ts-comment": "error", // Ban @ts-ignore comments
    "@typescript-eslint/no-floating-promises": "error", // Prevent promises without proper handling

    // React Hooks
    "react-hooks/rules-of-hooks": "error", // Check the Rules of Hooks
    "react-hooks/exhaustive-deps": "warn", // Check the effect dependencies

    // React
    "react/prop-types": "off", // Disable prop-types since TypeScript is used
    "react/react-in-jsx-scope": "off", // Not needed in Next.js
    "react/jsx-boolean-value": ["error", "always"], // Require explicit boolean values in JSX
    "react/jsx-no-duplicate-props": "error", // Disallow duplicate props in JSX
    "react/no-unescaped-entities": "error" // Disallow unescaped characters in JSX
  },
  "env": {
    "browser": true,
    "es2021": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module",
    "project": "./tsconfig.json" // Required for TypeScript linting
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "eslintIgnore": ["next.config.mjs", "postcss.config.mjs"]
}
